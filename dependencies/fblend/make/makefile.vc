
COMPILER = msvc

include make/makefile.lst

#-------------------------------#
# --- Compiler optimizations ---#

MSVC_OPT = -G4
GCC_OPT  =
ifdef PENTIUMONLY
MSVC_OPT = -G5
GCC_OPT  = -march=i586
endif
ifdef PPROONLY
MSVC_OPT = -G6
GCC_OPT  = -march=i686
endif


ifdef DEBUGMODE

FLAGS = -D "DEBUGMODE" -MLd -W3 -ZI -GZ -nologo

else

FLAGS = -ML -W3 -Ogityb2 -Gs $(MSVC_OPT) -nologo

endif

SRC_DIR_U = $(subst \,/,$(SRC_DIR))
SRC_DIR_D = $(subst /,\,$(SRC_DIR))

OBJ_DIR_U = $(subst \,/,$(OBJ_DIR))
OBJ_DIR_D = $(subst /,\,$(OBJ_DIR))

EXAMPLE_DIR_U = $(subst \,/,$(EXAMPLE_DIR))
EXAMPLE_DIR_D = $(subst /,\,$(EXAMPLE_DIR))

LIB_PATH_U = $(subst \,/,$(LIB_DIR))/$(LIB_NAME).lib
LIB_PATH_D = $(subst /,\,$(LIB_DIR))\$(LIB_NAME).lib

MAIN_INCLUDE_PATH_U = $(subst \,/,$(MAIN_INCLUDE_PATH))
MAIN_INCLUDE_PATH_D = $(subst /,\,$(MAIN_INCLUDE_PATH))

FBLEND_ASMDEF_INC = $(COMPILER)/asmdef.inc
FBLEND_ASMDEF_INC2 = "$(FBLEND_ASMDEF_INC)"

GCC_INCLUDE_PATHS = $(addprefix -I, $(INCLUDE_DIR))
MSVC_INCLUDE_PATHS = $(addprefix -I, $(INCLUDE_DIR))

OBJECTS = $(addprefix $(OBJ_DIR_U)/, $(addsuffix .obj, $(basename $(notdir $(C_SOURCE)))))
ASM_OBJECTS = $(addprefix $(OBJ_DIR_U)/x86/, $(addsuffix .obj, $(basename $(notdir $(ASM_SOURCE)))))
EXAMPLES = $(addsuffix .exe, $(basename $(addprefix $(EXAMPLE_DIR)/, $(EXAMP_SOURCE))))

MSVC_LINK_LIB = $(addsuffix .lib, $(LINK_LIB))

ASM_DEPENDENCE = $(addprefix $(SRC_DIR_U)/x86/, $(ASM_DEPEND))

RUNNER = obj/msvc/runner.exe


#--------------------------------------#
#-- Check for environment variables ---#

.PHONY: badwin badmsvc badspaces

ifeq ($(OS),Windows_NT)
WINSYSDIR = $(SYSTEMROOT)
WINSUBDIR = system32

ifeq ($(WINSYSDIR),)        # Fix for Win2k
WINSYSDIR = $(SystemRoot)
endif

else
WINSYSDIR = $(windir)
WINSUBDIR = system
endif

ifneq ($(WINSYSDIR),)
WINDIR_U = $(subst \,/,$(WINSYSDIR)/$(WINSUBDIR))
WINDIR_D = $(subst /,\,$(WINSYSDIR)/$(WINSUBDIR))
else
badwin:
	@echo Your SYSTEMROOT or windir environment variable is not set!
endif


ifdef MSVCDir
MSVCDIR_U = $(subst \,/,$(MSVCDir))
MSVCDIR_D = $(subst /,\,$(MSVCDir))
else
ifdef MSDevDir
MSVCDIR_U = $(subst \,/,$(MSDevDir))
MSVCDIR_D = $(subst /,\,$(MSDevDir))
else
ifdef MSVCDIR
MSVCDIR_U = $(subst \,/,$(MSVCDIR))
MSVCDIR_D = $(subst /,\,$(MSVCDIR))
else
ifdef MSDEVDIR
MSVCDIR_U = $(subst \,/,$(MSDEVDIR))
MSVCDIR_D = $(subst /,\,$(MSDEVDIR))
else
badmsvc:
	@echo Your MSVCDIR or MSDEVDIR environment variable is not set!
endif
endif
endif
endif

NULLSTRING :=
SPACE := $(NULLSTRING) # special magic to get an isolated space character

ifneq ($(findstring $(SPACE),$(MSVCDIR)$(MSDEVDIR)),)
badspaces:
	@echo There are spaces in your MSVCDIR or MSDEVDIR environment
	@echo variables: please change these to the 8.3 short filename
	@echo version, or move your compiler to a different directory.
endif



lib: $(LIB_PATH_U)
examples: $(EXAMPLES)

#----------------------------#
#---- Various targets -------#

include make/makefile.tst

clean:
	@echo Cleaning up...
ifdef UNIX_TOOLS
	- rm -f $(OBJ_DIR_U)/*.o
	- rm -f $(OBJ_DIR_U)/*.obj
	- rm -f obj/$(COMPILER)/*.h
	- rm -f $(OBJ_DIR_U)/x86/*.obj
	- rm -f $(EXAMPLE_DIR_U)/*.obj
else
	- del $(OBJ_DIR_D)\*.o
	- del $(OBJ_DIR_D)\*.obj
	- del obj\$(COMPILER)\*.h
	- del $(OBJ_DIR_D)\x86\*.obj
	- del $(EXAMPLE_DIR_D)\*.obj
endif

veryclean: clean
ifdef UNIX_TOOLS
	- rm -f $(LIB_PATH_U)
	- rm -f $(EXAMPLE_DIR_U)/*.exe
	- deltree /y docs\html
	- rm -f include/sse.h
	- rm -f include/mmx.h
	- rm -f obj/asmdef.inc
	- rm -f obj/$(COMPILER)/asmdef.inc
	- rm -f obj/$(COMPILER)/asmdef.exe
else
	- del $(LIB_PATH_D)
	- del $(EXAMPLE_DIR_D)\*.exe
	- deltree /y docs\html
	- del include\sse.h
	- del include\mmx.h
	- del obj\asmdef.inc
	- del obj\$(COMPILER)\asmdef.inc
	- del obj\$(COMPILER)\asmdef.exe
endif

install: $(LIB_PATH_U) $(MAIN_INCLUDE_PATH_U)
ifdef UNIX_TOOLS
	cp $(LIB_PATH_U) $(MSVCDIR_U)/lib
	cp $(MAIN_INCLUDE_PATH_U) $(MSVCDIR_U)/include
else
	copy $(LIB_PATH_D) $(MSVCDIR_D)\lib
	copy $(MAIN_INCLUDE_PATH_D) $(MSVCDIR_D)\include
endif
	@echo -
	@echo FBlend is now installed.

uninstall:
ifdef UNIX_TOOLS
	- rm $(MSVCDIR_U)/lib/$(notdir $(LIB_PATH_U))
	- rm $(MSVCDIR_U)/include/$(notdir $(MAIN_INCLUDE_PATH_U))
else
	- del $(MSVCDIR_D)\lib\$(notdir $(LIB_PATH_U))
	- del $(MSVCDIR_D)\include\$(notdir $(MAIN_INCLUDE_PATH_U))
endif
	@echo -
	@echo FBlend is uninstalled.

$(RUNNER): src/misc/runner.c
	gcc -O -Wall -Werror src/misc/runner.c -o $(RUNNER)

$(OBJ_DIR_U)/%.obj: $(SRC_DIR_U)/%.c include/mmx.h include/sse.h $(RUNNER)
	$(RUNNER) cl -nologo @ -c $< -Fo$@ '$(MSVC_INCLUDE_PATHS)' $(FLAGS)

$(OBJ_DIR_U)/x86/%.obj: $(SRC_DIR_U)/x86/%.s include/mmx.h include/sse.h obj/$(FBLEND_ASMDEF_INC) $(ASM_DEPENDENCE) $(RUNNER)
ifdef UNIX_TOOLS
	@echo "#include $(FBLEND_ASMDEF_INC2)" > obj/asmdef.inc
else
	@echo #include $(FBLEND_ASMDEF_INC2) > obj\asmdef.inc
endif
	gcc -x assembler-with-cpp -c $< -o $@ $(GCC_INCLUDE_PATHS)

$(LIB_PATH_U): $(OBJECTS) $(ASM_OBJECTS) $(MAIN_INCLUDE_PATH_U) $(RUNNER)
	$(RUNNER) lib -nologo @ -out:$@ $(OBJECTS) $(ASM_OBJECTS)
	
$(EXAMPLE_DIR)/%.exe: $(EXAMPLE_DIR)/%.c $(MAIN_INCLUDE_PATH_U) $(LIB_PATH_U) $(RUNNER)
	$(RUNNER) cl -nologo @ $< -Fe$@ -Fo$(addsuffix .obj, $(basename $@)) $(LIB_PATH_U) $(MSVC_LINK_LIB) $(FLAGS) '$(MSVC_INCLUDE_PATHS)'

