
COMPILER = mingw32

include make/makefile.lst

#-------------------------------#
# --- Compiler optimizations ---#

GCC_OPT  := -mpentium
ifdef PENTIUMONLY
GCC_OPT  := -march=i586
endif
ifdef PPROONLY
GCC_OPT  := -march=i686
endif


ifdef DEBUGMODE

FLAGS = -DDEBUGMODE -g

else

FLAGS = -W -Wall -O2 -ffast-math -fomit-frame-pointer $(GCC_OPT)

endif

SRC_DIR_U = $(subst \,/,$(SRC_DIR))
SRC_DIR_D = $(subst /,\,$(SRC_DIR))

OBJ_DIR_U = $(subst \,/,$(OBJ_DIR))
OBJ_DIR_D = $(subst /,\,$(OBJ_DIR))

EXAMPLE_DIR_U = $(subst \,/,$(EXAMPLE_DIR))
EXAMPLE_DIR_D = $(subst /,\,$(EXAMPLE_DIR))

LIB_PATH_U = $(subst \,/,$(LIB_DIR))/lib$(LIB_NAME).a
LIB_PATH_D = $(subst /,\,$(LIB_DIR))\lib$(LIB_NAME).a

MAIN_INCLUDE_PATH_U = $(subst \,/,$(MAIN_INCLUDE_PATH))
MAIN_INCLUDE_PATH_D = $(subst /,\,$(MAIN_INCLUDE_PATH))

FBLEND_ASMDEF_INC = $(COMPILER)/asmdef.inc
FBLEND_ASMDEF_INC2 = "$(FBLEND_ASMDEF_INC)"
GCC_INCLUDE_PATHS = $(addprefix -I, $(INCLUDE_DIR))

OBJECTS = $(addprefix $(OBJ_DIR_U)/, $(addsuffix .obj, $(basename $(notdir $(C_SOURCE)))))
ASM_OBJECTS = $(addprefix $(OBJ_DIR_U)/x86/, $(addsuffix .obj, $(basename $(notdir $(ASM_SOURCE)))))
EXAMPLES = $(addsuffix .exe, $(basename $(addprefix $(EXAMPLE_DIR)/, $(EXAMP_SOURCE))))

MING_LINK_LIB = $(addprefix -l, $(LINK_LIB))

ASM_DEPENDENCE = $(addprefix $(SRC_DIR_U)/x86/, $(ASM_DEPEND))


#--------------------------------------#
#-- Check for environment variables ---#

.PHONY: badming

ifdef MINGDIR
  MINGDIR_U = $(subst \,/,$(MINGDIR))
  MINGDIR_D = $(subst /,\,$(MINGDIR))
else
badming:
	@echo Please specify your mingw32 directory via MINGDIR=.
endif



lib: $(LIB_PATH_U)
examples: $(EXAMPLES)

#----------------------------#
#---- Various targets -------#

include make/makefile.tst

clean:
	@echo Cleaning up...
ifdef UNIX_TOOLS
	- rm -f $(OBJ_DIR_U)/*.o
	- rm -f $(OBJ_DIR_U)/*.obj
	- rm -f obj/$(COMPILER)/*.h
	- rm -f $(OBJ_DIR_U)/x86/*.obj
	- rm -f $(EXAMPLE_DIR_U)/*.obj
else
	- del $(OBJ_DIR_D)\*.o
	- del $(OBJ_DIR_D)\*.obj
	- del obj\$(COMPILER)\*.h
	- del $(OBJ_DIR_D)\x86\*.obj
	- del $(EXAMPLE_DIR_D)\*.obj
endif

veryclean: clean
ifdef UNIX_TOOLS
	- rm -f $(LIB_PATH_U)
	- rm -f $(EXAMPLE_DIR_U)/*.exe
	- deltree /y docs\html
	- rm -f include/sse.h
	- rm -f include/mmx.h
	- rm -f obj/asmdef.inc
	- rm -f obj/$(COMPILER)/asmdef.inc
	- rm -f obj/$(COMPILER)/asmdef.exe
else
	- del $(LIB_PATH_D)
	- del $(EXAMPLE_DIR_D)\*.exe
	- deltree /y docs\html
	- del include\sse.h
	- del include\mmx.h
	- del obj\asmdef.inc
	- del obj\$(COMPILER)\asmdef.inc
	- del obj\$(COMPILER)\asmdef.exe
endif
	

install: $(LIB_PATH_U) $(MAIN_INCLUDE_PATH_U)
ifdef UNIX_TOOLS
	cp $(LIB_PATH_U) $(MINGDIR_U)/lib
	cp $(MAIN_INCLUDE_PATH_U) $(MINGDIR_U)/include
else
	copy $(LIB_PATH_D) $(MINGDIR_D)\lib
	copy $(MAIN_INCLUDE_PATH_D) $(MINGDIR_D)\include
endif
	@echo -
	@echo FBlend is now installed.

uninstall:
ifdef UNIX_TOOLS
	- rm -f $(MINGDIR_U)/lib/$(notdir $(LIB_PATH_U))
	- rm -f $(MINGDIR_U)/include/$(notdir $(MAIN_INCLUDE_PATH_U))
else
	- del $(MINGDIR_D)\lib\$(notdir $(LIB_PATH_U))
	- del $(MINGDIR_D)\include\$(notdir $(MAIN_INCLUDE_PATH_U))
endif
	@echo -
	@echo FBlend is uninstalled.

$(OBJ_DIR_U)/%.obj: $(SRC_DIR_U)/%.c include/mmx.h include/sse.h
	gcc -c $< -o $@ $(FLAGS) $(GCC_INCLUDE_PATHS)

$(OBJ_DIR_U)/x86/%.obj: $(SRC_DIR_U)/x86/%.s include/mmx.h include/sse.h obj/$(FBLEND_ASMDEF_INC) $(ASM_DEPENDENCE)
ifdef UNIX_TOOLS
	@echo "#include $(FBLEND_ASMDEF_INC2)" > obj/asmdef.inc
else
	@echo #include $(FBLEND_ASMDEF_INC2) > obj\asmdef.inc
endif
	gcc -x assembler-with-cpp -c $< -o $@ $(GCC_INCLUDE_PATHS)

$(LIB_PATH_U): $(OBJECTS) $(ASM_OBJECTS) $(MAIN_INCLUDE_PATH_U)
	ar rs $@ $(OBJECTS) $(ASM_OBJECTS)
	
$(EXAMPLE_DIR)/%.exe: $(EXAMPLE_DIR)/%.c $(MAIN_INCLUDE_PATH_U) $(LIB_PATH_U)
	gcc $< -o $@ -mwindows $(FLAGS) $(GCC_INCLUDE_PATHS) $(LIB_PATH_U) $(MING_LINK_LIB)

